package main

import (
	"fmt"
	"time"
)
func main() {
	start := time.Now()
	fmt.Println(sortArray([]int{}))
	end := time.Since(start)
	fmt.Println("SPEND", end)
}

func sortArray(nums []int) []int {
	return splitter(nums)
}

func splitter(nums []int)[]int {
	if len(nums) <= 1 {
		return nums
	}
	mid := len(nums) / 2
	leftHalve := splitter(nums[:mid])
	rightHalve := splitter(nums[mid:])
	return merger(leftHalve, rightHalve)
}

func merger(leftHalve []int, rightHalve []int) []int {
	res := []int{}
	i, j := 0, 0
	for i < len(leftHalve) && j < len(rightHalve) {
		if leftHalve[i] > rightHalve[j] {
			res = append(res, rightHalve[j])
			j++
		}else {
			res = append(res, leftHalve[i])
			i++
		}
	}
	for ; i < len(leftHalve); i++ {
		res = append(res, leftHalve[i])
	}
	
	for ; j < len(rightHalve); j++ {
		res = append(res, rightHalve[j])
	}
	
	return res
}